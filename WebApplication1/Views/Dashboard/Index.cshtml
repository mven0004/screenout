@model IEnumerable<WebApplication1.ViewModels.ChildOverviewViewModel>
@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}



@if (ViewBag.PageStatus == "NOCHILD")
{
    <div class="row">
        <div class="col-12">
            <div class="alert alert-info">
                <h3>Notice:</h3>
                <p>You do not have any child under your profile yet. Please add your child information and start tracking.</p>
                @Html.ActionLink("Add Child", "Create", "Children", null, htmlAttributes: new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}
else if (ViewBag.PageStatus == "NOTRACKING")
{
    <div class="row">
        <div class="col-12">
            <div class="alert alert-info">
                <h3>Notice:</h3>
                <p>There is no tracking record about your child yet. Please add more tracking data.</p>
                @Html.ActionLink("Add Tracking", "Create", "TrackedTimes", null, htmlAttributes: new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}

@if (ViewBag.PageStatus != "NOCHILD")
{
    <div class="row">
        <div class="col-12">
            <h3 class="text-primary">Overview</h3>
            <hr />
        </div>
    </div>

    foreach (var child in Model)
    {
        <div class="card shadow mb-3">
            <div class="card-body">
                <div class="card-title">
                    <div class="d-flex justify-content-between">
                        <h5><span class="font-weight-bolder">@child.ChildName</span> - <span class="text-muted">Screen Time Goal: @child.GetScreenTimeGoalString()</span></h5>
                        <div>
                            @Html.ActionLink("View Progress", "Progress", "Children", routeValues: new { id = child.ChildId }, htmlAttributes: new { @class = "btn btn-outline-info btn-sm" })
                            @Html.ActionLink("Add Tracking", "Create", "TrackedTimes", routeValues: null, htmlAttributes: new { @class = "btn btn-outline-success btn-sm" })
                        </div>
                    </div>
                    <hr />
                </div>
                <div class="row">
                    <div class="col-2 border-right">
                        <div class="d-flex justify-content-center">
                            @*Trophy Icon*@
                            <div class="mr-4 mt-1">
                                <svg xmlns="http://www.w3.org/2000/svg" height="48" version="1.1" viewBox="1 0 511.99999 511" width="48"> <g id="surface1"> <path d="M 336.667969 308.453125 C 328.40625 308.453125 321.695312 301.765625 321.671875 293.496094 C 321.644531 285.214844 328.339844 278.476562 336.625 278.453125 C 374.304688 278.335938 410.152344 255.585938 437.5625 214.390625 C 463.871094 174.851562 479.328125 123.144531 481.683594 67.453125 L 415.613281 67.453125 C 407.328125 67.453125 400.613281 60.738281 400.613281 52.453125 C 400.613281 44.167969 407.328125 37.453125 415.613281 37.453125 L 497 37.453125 C 505.285156 37.453125 512 44.167969 512 52.453125 C 512 119.664062 494.433594 183.074219 462.542969 231.011719 C 429.410156 280.800781 384.726562 308.304688 336.71875 308.453125 C 336.703125 308.453125 336.6875 308.453125 336.667969 308.453125 Z M 336.667969 308.453125 " style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,55.686275%,11.372549%);fill-opacity:1;" /> <path d="M 175.332031 308.453125 C 175.3125 308.453125 175.300781 308.453125 175.285156 308.453125 C 127.277344 308.304688 82.589844 280.800781 49.460938 231.011719 C 17.566406 183.074219 0 119.664062 0 52.453125 C 0 44.167969 6.714844 37.453125 15 37.453125 L 96.386719 37.453125 C 104.671875 37.453125 111.386719 44.167969 111.386719 52.453125 C 111.386719 60.738281 104.671875 67.453125 96.386719 67.453125 L 30.316406 67.453125 C 32.671875 123.144531 48.128906 174.851562 74.4375 214.390625 C 101.847656 255.585938 137.695312 278.335938 175.375 278.453125 C 183.660156 278.476562 190.355469 285.214844 190.328125 293.496094 C 190.304688 301.765625 183.59375 308.449219 175.332031 308.453125 Z M 175.332031 308.453125 " style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,69.019608%,13.72549%);fill-opacity:1;" /> <path d="M 416.667969 0.5 L 95.332031 0.5 C 87.050781 0.5 80.332031 7.214844 80.332031 15.5 C 80.332031 103.613281 97.609375 186.691406 128.976562 249.425781 C 149.074219 289.617188 173.652344 318.792969 200.832031 335.496094 L 200.832031 417.164062 C 200.832031 425.449219 207.550781 432.164062 215.832031 432.164062 L 296.167969 432.164062 C 304.453125 432.164062 311.167969 425.449219 311.167969 417.164062 L 311.167969 335.496094 C 338.347656 318.796875 362.929688 289.617188 383.023438 249.425781 C 414.390625 186.691406 431.667969 103.613281 431.667969 15.5 C 431.667969 7.214844 424.953125 0.5 416.667969 0.5 Z M 416.667969 0.5 " style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,81.960784%,16.862745%);fill-opacity:1;" /> <path d="M 311.167969 417.164062 L 311.167969 335.496094 C 338.347656 318.796875 362.929688 289.617188 383.023438 249.425781 C 414.390625 186.691406 431.667969 103.613281 431.667969 15.5 C 431.667969 7.214844 424.953125 0.5 416.667969 0.5 L 256 0.5 L 256 432.164062 L 296.167969 432.164062 C 304.453125 432.164062 311.167969 425.449219 311.167969 417.164062 Z M 311.167969 417.164062 " style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,69.019608%,13.72549%);fill-opacity:1;" /> <path d="M 336.332031 402.164062 L 175.667969 402.164062 C 145.25 402.164062 120.5 426.914062 120.5 457.332031 L 120.5 497.5 C 120.5 505.78125 127.214844 512.496094 135.5 512.496094 L 376.5 512.496094 C 384.785156 512.496094 391.5 505.78125 391.5 497.5 L 391.5 457.332031 C 391.5 426.914062 366.753906 402.164062 336.332031 402.164062 Z M 336.332031 402.164062 " style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,55.686275%,11.372549%);fill-opacity:1;" /> <path d="M 336.332031 402.164062 L 256 402.164062 L 256 512.496094 L 376.5 512.496094 C 384.785156 512.496094 391.5 505.78125 391.5 497.5 L 391.5 457.332031 C 391.5 426.914062 366.753906 402.164062 336.332031 402.164062 Z M 336.332031 402.164062 " style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,42.745098%,8.235294%);fill-opacity:1;" /> <path d="M 392.566406 512.496094 L 119.433594 512.496094 C 111.152344 512.496094 104.433594 505.78125 104.433594 497.5 C 104.433594 489.214844 111.152344 482.5 119.433594 482.5 L 392.566406 482.5 C 400.851562 482.5 407.566406 489.214844 407.566406 497.5 C 407.566406 505.78125 400.851562 512.496094 392.566406 512.496094 Z M 392.566406 512.496094 " style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,69.019608%,13.72549%);fill-opacity:1;" /> <path d="M 392.566406 482.5 L 256 482.5 L 256 512.496094 L 392.566406 512.496094 C 400.851562 512.496094 407.566406 505.78125 407.566406 497.5 C 407.566406 489.214844 400.851562 482.5 392.566406 482.5 Z M 392.566406 482.5 " style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,55.686275%,11.372549%);fill-opacity:1;" /> </g> </svg>
                            </div>
                            <div class="text-center">
                                <div class="text-muted">Met Goal</div>
                                <h4 class="font-weight-bold text-success">@child.GetGoalPercentString()</h4>
                            </div>
                        </div>
                    </div>

                    <div class="col-4 text-center border-right">
                        <div class="text-muted">
                            Avg Screen Time: @child.CurStartDate.ToString("dd/MMM") - @child.CurDate.ToString("dd/MMM/yy")
                        </div>
                        <h4 class="font-weight-bold text-primary">@child.GetCurAvgScreenTimeString()</h4>
                    </div>

                    <div class="col-4 text-center border-right">
                        <div class="text-muted">
                            Avg Screen Time: @child.PreStartDate.ToString("dd/MMM") - @child.PreDate.ToString("dd/MMM/yy")
                        </div>
                        <h4 class="font-weight-bold text-primary">@child.GetPreAvgScreenTimeString()</h4>
                    </div>

                    <div class="col-2">
                        <div class="d-flex justify-content-center">
                            @if (child.MoMAvgScreenTime > 0)
                            {
                                // Sad Icon
                                <div class="mr-4 mt-1">
                                    <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="48" height="48" viewBox="0 0 473.931 473.931" xml:space="preserve"> <circle style="fill:#FFC10E;" cx="236.966" cy="236.966" r="236.966" /> <g> 	<circle style="fill:#333333;" cx="164.937" cy="155.231" r="37.216" /> 	<circle style="fill:#333333;" cx="305.664" cy="155.231" r="37.216" /> 	<path style="fill:#333333;" d="M105.278,326.581c86.386,0,172.776,0,259.162,0c12.067,0,12.067-18.709,0-18.709 		c-86.386,0-172.776,0-259.162,0C93.211,307.872,93.211,326.581,105.278,326.581L105.278,326.581z" /> </g> </svg>
                                </div>
                                <div class="text-center">
                                    <span class="text-muted">Change</span>
                                    <h4 class="font-weight-bold text-danger">@child.GetMoMAvgScreenTimeString()</h4>
                                </div>
                            }
                            else
                            {
                                // Smiley Icon
                                <div class="mr-4 mt-1">
                                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="48" height="48" viewBox="0 0 473.931 473.931" xml:space="preserve"> <circle style="fill:#FFC10E;" cx="236.966" cy="236.966" r="236.966" /> <path style="fill:#333333;" d="M81.391,237.127c0,85.911,69.649,155.56,155.56,155.56c85.915,0,155.567-69.649,155.567-155.56 	H81.391z" /> <path style="fill:#CA2027;" d="M150.452,298.705c0,47.771,38.731,86.498,86.498,86.498c47.775,0,86.502-38.731,86.502-86.498 	H150.452z" /> <g> 	<circle style="fill:#333333;" cx="164.937" cy="155.231" r="37.216" /> 	<circle style="fill:#333333;" cx="305.664" cy="155.231" r="37.216" /> </g> </svg>
                                </div>
                                <div class="text-center">
                                    <span class="text-muted">Change</span>
                                    <h4 class="font-weight-bold text-success">@child.GetMoMAvgScreenTimeString()</h4>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    } // End foreach block
}

@if (ViewBag.PageStatus == "WITHTRACKING")
{
    <div class="row">
        <div class="col-12">
            <h3 class="text-primary">Family Time and Screen Time</h3>
            <hr />
        </div>
    </div>

    <div class="row">
        <div class="col-md-5">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="card-title">
                        <h5>Weekday vs Weekend</h5>
                        <hr />
                    </div>
                    <div id="WeekNameSummaryChart" style="min-height: 350px;"></div>
                </div>
            </div>
        </div>
        <div class="col-md-7">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="card-title">
                        <h5>Avg Family Time and Screen Time by Month</h5>
                        <hr />
                    </div>
                    <div id="MonthNameSummaryChart" style="min-height: 350px;"></div>
                </div>
            </div>
        </div>
    </div>
}

@if (ViewBag.PageStatus == "WITHTRACKING")
{
    @section Scripts
    {
        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
        <script type="text/javascript">
        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });
        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawTrackedTime);

        // redraw the charts when window resizes
        window.onresize = function () {
            drawTrackedTime();
        }

        // get data for display charts
        function getTrackedDataSummary() {
            var data;
            $.ajax({
                url: "@Url.Action("GetTrackedDataSummary", "Dashboard")",
                contentType: "application/json; charset=utf-8",
                type: 'GET',
                cache: false,
                async: false,
                success: function (result) {
                    data = result;
                }
            });
            return data;
        }

        function drawTrackedTime() {
            var allData = getTrackedDataSummary();
            var weekNameSummary = new google.visualization.DataTable();
            weekNameSummary.addColumn('string', "Week Name");
            weekNameSummary.addColumn('number', "Family Time");
            weekNameSummary.addColumn('number', "Screen Time");

            allData.WeekSummary.forEach(function (d) {
                weekNameSummary.addRow([
                    d.WeekName,
                    d.AvgFamilyTime,
                    d.AvgScreenTime
                ]);
            });

            var monthNameSummary = new google.visualization.DataTable();
            monthNameSummary.addColumn('string', "Month Name");
            monthNameSummary.addColumn('number', "Family Time");
            monthNameSummary.addColumn('number', "Screen Time");

            allData.MonthSummary.forEach(function (d) {
                monthNameSummary.addRow([
                    d.MonthName,
                    d.AvgFamilyTime,
                    d.AvgScreenTime
                ]);
            });

            // Set chart options
            var options = {
                fontName: 'Verdana',
                curveType: 'function',
                colors: ["#457aff", "#d7475f"],
                chartArea: { left: 50, top: 20, width: '90%', height: '80%' },
                legend: { position: 'in', alignment: 'end' },
                vAxis: {
                    title: "Daily Avg (Hour)",
                    titleTextStyle: { italic: false },
                    minValue: 0,
                    gridlines: { color: 'f6f6f6' },
                    minorGridlines: { color: 'white' }
                },
                hAxis: {
                    title: "",
                    gridlines: { color: 'white' }
                }
            };
            var weekNameChart = new google.visualization.ColumnChart(document.getElementById('WeekNameSummaryChart'));
            weekNameChart.draw(weekNameSummary, options);

            var monthNameChart = new google.visualization.ColumnChart(document.getElementById('MonthNameSummaryChart'));
            monthNameChart.draw(monthNameSummary, options);
        }
        </script>
    }
}
