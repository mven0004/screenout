@model WebApplication1.ViewModels.ChildOverviewViewModel
@{
    ViewBag.Title = "Progress";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<div class="row">
    <div class="col">
        <div class="d-flex justify-content-between">
            <h3 class="text-primary">Child Progress: <strong>@Model.ChildName</strong></h3>
            <div>
                @Html.ActionLink("Add Tracking", "Create", "TrackedTimes", routeValues: null, htmlAttributes: new { @class = "btn btn-success btn-sm" })
                @Html.ActionLink("Back to Dashboard", "Index", "Dashboard", routeValues: null, htmlAttributes: new { @class = "btn btn-secondary btn-sm" })
            </div>
        </div>
        <hr />
    </div>
</div>

@if (ViewBag.PageStatus == "NOTRACKING")
{
    <div class="row">
        <div class="col-12">
            <div class="alert alert-info">
                <h3>Notice:</h3>
                <p>
                    It appears that there is no tracking record under your child profile yet. Start tracking your child's screen time and family time now.
                </p>
                @Html.ActionLink("Add Tracking", "Create", "TrackedTimes", routeValues: null, htmlAttributes: new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}

<div class="card shadow-sm mb-3">
    <div class="card-body">
        <div class="card-title">
            <h5>Overview</h5>
            <hr />
        </div>
        <div class="row">
            <div class="col-4 border-right">
                <div class="d-flex justify-content-center">
                    @*Tablet Icon*@
                    <div class="mr-4 mt-1">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" x="0px" y="0px" viewBox="0 0 33.994 33.994" xml:space="preserve" width="48" height="48"><path d="M27.125,0H6.867C5.59,0,4.562,1.033,4.562,2.309v29.377c0,1.272,1.028,2.308,2.305,2.308h20.258   c1.273,0,2.306-1.035,2.306-2.308V2.309C29.433,1.033,28.399,0,27.125,0z M16.997,33.129c-0.758,0-1.371-0.613-1.371-1.37   c0-0.758,0.613-1.372,1.371-1.372c0.756,0,1.371,0.614,1.371,1.372C18.368,32.516,17.753,33.129,16.997,33.129z M27.098,29.186   H6.896V2.774h20.202V29.186z" data-original="#000000" class="active-path" data-old_color="#000000" fill="#981313" /></svg>
                    </div>
                    <div class="text-center">
                        <div class="text-muted">Avg Screen Time</div>
                        <h4 class="font-weight-bold text-primary">@Model.GetAvgScreenTimeString()</h4>
                    </div>
                </div>
            </div>
            <div class="col-4 border-right">
                <div class="d-flex justify-content-center">
                    @*Family Icon*@
                    <div class="mr-4 mt-1">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" x="0px" y="0px" width="48" height="48" viewBox="0 0 98.666 98.666" xml:space="preserve"><g><g> 	<g> 		<circle cx="49.332" cy="53.557" r="10.297" data-original="#000000" class="active-path" data-old_color="#000000" fill="#981313" /> 		<path d="M53.7,64.556h-8.737c-7.269,0-13.183,5.916-13.183,13.184v10.688l0.027,0.166l0.735,0.229    c6.937,2.168,12.965,2.892,17.927,2.892c9.688,0,15.303-2.764,15.65-2.938l0.688-0.351l0.071,0.002V77.739    C66.883,70.472,60.971,64.556,53.7,64.556z" data-original="#000000" class="active-path" data-old_color="#000000" fill="#981313" /> 		<circle cx="28.312" cy="23.563" r="16.611" data-original="#000000" class="active-path" data-old_color="#000000" fill="#981313" /> 		<path d="M70.35,40.174c9.174,0,16.609-7.44,16.609-16.613c0-9.17-7.438-16.609-16.609-16.609c-9.176,0-16.61,7.437-16.61,16.609    S61.174,40.174,70.35,40.174z" data-original="#000000" class="active-path" data-old_color="#000000" fill="#981313" /> 		<path d="M41.258,62.936c-2.637-2.274-4.314-5.632-4.314-9.378c0-4.594,2.519-8.604,6.243-10.743    c-2.425-0.965-5.061-1.511-7.826-1.511H21.266C9.54,41.303,0,50.847,0,62.571v17.241l0.043,0.269L1.23,80.45    c10.982,3.432,20.542,4.613,28.458,4.656v-7.367C29.688,70.595,34.623,64.599,41.258,62.936z" data-original="#000000" class="active-path" data-old_color="#000000" fill="#981313" /> 		<path d="M77.398,41.303H63.305c-2.765,0-5.398,0.546-7.824,1.511c3.727,2.139,6.246,6.147,6.246,10.743    c0,3.744-1.678,7.102-4.313,9.376c2.656,0.661,5.101,2.02,7.088,4.008c2.888,2.89,4.479,6.726,4.478,10.8v7.365    c7.916-0.043,17.477-1.225,28.457-4.656l1.187-0.369l0.044-0.269V62.571C98.664,50.847,89.124,41.303,77.398,41.303z" data-original="#000000" class="active-path" data-old_color="#000000" fill="#981313" /> 	</g> </g></g> </svg>
                    </div>
                    <div class="text-center">
                        <div class="text-muted">Avg Family Time</div>
                        <h4 class="font-weight-bold text-primary">@Model.GetAvgFamilyTimeString()</h4>
                    </div>
                </div>
            </div>
            <div class="col-4">
                <div class="d-flex justify-content-center">
                    @*Goal Icon*@
                    <div class="mr-4 mt-1">
                        <svg xmlns="http://www.w3.org/2000/svg" height="48" viewBox="0 0 64 64" width="48"><g><g><path d="m51 27h-30v-20h30l-8 10z" fill="#ed1c24" data-original="#ED1C24" class="active-path" data-old_color="#ed1c24" style="fill:#981313" /><path d="m18 2h3v60h-3z" fill="#ffeb99" data-original="#FFEB99" class="" /><path d="m47 61h-25v-33h29a1 1 0 0 0 .781-1.625l-7.5-9.375 7.5-9.375a1 1 0 0 0 -.781-1.625h-29v-4a1 1 0 0 0 -1-1h-3a1 1 0 0 0 -1 1v59h-6a1 1 0 0 0 0 2h36a1 1 0 0 0 0-2zm1.919-53-6.7 8.375a1 1 0 0 0 0 1.25l6.7 8.375h-26.919v-18zm-29.919 53v-58h1v58z" data-original="#000000" class="" style="fill:#000000" /><path d="m52 61h-2a1 1 0 0 0 0 2h2a1 1 0 0 0 0-2z" data-original="#000000" class="" style="fill:#000000" /></g></g> </svg>
                    </div>
                    <div class="text-center">
                        <div class="text-muted">Screen Time Goal</div>
                        <h4 class="font-weight-bold text-primary">@Model.GetScreenTimeGoalString()</h4>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card shadow-sm mb-3">
    <div class="card-body">
        <div class="card-title">
            <h5>Screen Time Summary</h5>
            <hr />
        </div>
        <div class="row">
            <div class="col-2 border-right">
                <div class="d-flex justify-content-center">
                    @*Trophy Icon*@
                    <div class="mr-4 mt-1">
                        <svg xmlns="http://www.w3.org/2000/svg" height="48" version="1.1" viewBox="1 0 511.99999 511" width="48"> <g id="surface1"> <path d="M 336.667969 308.453125 C 328.40625 308.453125 321.695312 301.765625 321.671875 293.496094 C 321.644531 285.214844 328.339844 278.476562 336.625 278.453125 C 374.304688 278.335938 410.152344 255.585938 437.5625 214.390625 C 463.871094 174.851562 479.328125 123.144531 481.683594 67.453125 L 415.613281 67.453125 C 407.328125 67.453125 400.613281 60.738281 400.613281 52.453125 C 400.613281 44.167969 407.328125 37.453125 415.613281 37.453125 L 497 37.453125 C 505.285156 37.453125 512 44.167969 512 52.453125 C 512 119.664062 494.433594 183.074219 462.542969 231.011719 C 429.410156 280.800781 384.726562 308.304688 336.71875 308.453125 C 336.703125 308.453125 336.6875 308.453125 336.667969 308.453125 Z M 336.667969 308.453125 " style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,55.686275%,11.372549%);fill-opacity:1;" /> <path d="M 175.332031 308.453125 C 175.3125 308.453125 175.300781 308.453125 175.285156 308.453125 C 127.277344 308.304688 82.589844 280.800781 49.460938 231.011719 C 17.566406 183.074219 0 119.664062 0 52.453125 C 0 44.167969 6.714844 37.453125 15 37.453125 L 96.386719 37.453125 C 104.671875 37.453125 111.386719 44.167969 111.386719 52.453125 C 111.386719 60.738281 104.671875 67.453125 96.386719 67.453125 L 30.316406 67.453125 C 32.671875 123.144531 48.128906 174.851562 74.4375 214.390625 C 101.847656 255.585938 137.695312 278.335938 175.375 278.453125 C 183.660156 278.476562 190.355469 285.214844 190.328125 293.496094 C 190.304688 301.765625 183.59375 308.449219 175.332031 308.453125 Z M 175.332031 308.453125 " style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,69.019608%,13.72549%);fill-opacity:1;" /> <path d="M 416.667969 0.5 L 95.332031 0.5 C 87.050781 0.5 80.332031 7.214844 80.332031 15.5 C 80.332031 103.613281 97.609375 186.691406 128.976562 249.425781 C 149.074219 289.617188 173.652344 318.792969 200.832031 335.496094 L 200.832031 417.164062 C 200.832031 425.449219 207.550781 432.164062 215.832031 432.164062 L 296.167969 432.164062 C 304.453125 432.164062 311.167969 425.449219 311.167969 417.164062 L 311.167969 335.496094 C 338.347656 318.796875 362.929688 289.617188 383.023438 249.425781 C 414.390625 186.691406 431.667969 103.613281 431.667969 15.5 C 431.667969 7.214844 424.953125 0.5 416.667969 0.5 Z M 416.667969 0.5 " style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,81.960784%,16.862745%);fill-opacity:1;" /> <path d="M 311.167969 417.164062 L 311.167969 335.496094 C 338.347656 318.796875 362.929688 289.617188 383.023438 249.425781 C 414.390625 186.691406 431.667969 103.613281 431.667969 15.5 C 431.667969 7.214844 424.953125 0.5 416.667969 0.5 L 256 0.5 L 256 432.164062 L 296.167969 432.164062 C 304.453125 432.164062 311.167969 425.449219 311.167969 417.164062 Z M 311.167969 417.164062 " style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,69.019608%,13.72549%);fill-opacity:1;" /> <path d="M 336.332031 402.164062 L 175.667969 402.164062 C 145.25 402.164062 120.5 426.914062 120.5 457.332031 L 120.5 497.5 C 120.5 505.78125 127.214844 512.496094 135.5 512.496094 L 376.5 512.496094 C 384.785156 512.496094 391.5 505.78125 391.5 497.5 L 391.5 457.332031 C 391.5 426.914062 366.753906 402.164062 336.332031 402.164062 Z M 336.332031 402.164062 " style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,55.686275%,11.372549%);fill-opacity:1;" /> <path d="M 336.332031 402.164062 L 256 402.164062 L 256 512.496094 L 376.5 512.496094 C 384.785156 512.496094 391.5 505.78125 391.5 497.5 L 391.5 457.332031 C 391.5 426.914062 366.753906 402.164062 336.332031 402.164062 Z M 336.332031 402.164062 " style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,42.745098%,8.235294%);fill-opacity:1;" /> <path d="M 392.566406 512.496094 L 119.433594 512.496094 C 111.152344 512.496094 104.433594 505.78125 104.433594 497.5 C 104.433594 489.214844 111.152344 482.5 119.433594 482.5 L 392.566406 482.5 C 400.851562 482.5 407.566406 489.214844 407.566406 497.5 C 407.566406 505.78125 400.851562 512.496094 392.566406 512.496094 Z M 392.566406 512.496094 " style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,69.019608%,13.72549%);fill-opacity:1;" /> <path d="M 392.566406 482.5 L 256 482.5 L 256 512.496094 L 392.566406 512.496094 C 400.851562 512.496094 407.566406 505.78125 407.566406 497.5 C 407.566406 489.214844 400.851562 482.5 392.566406 482.5 Z M 392.566406 482.5 " style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,55.686275%,11.372549%);fill-opacity:1;" /> </g> </svg>
                    </div>
                    <div class="text-center">
                        <div class="text-muted">Met Goal</div>
                        <h4 class="font-weight-bold text-success">@Model.GetGoalPercentString()</h4>
                    </div>
                </div>
            </div>

            <div class="col-4 text-center border-right">
                <div class="text-muted">
                    Avg Screen Time: @Model.CurStartDate.ToString("dd/MMM") - @Model.CurDate.ToString("dd/MMM/yy")
                </div>
                <h4 class="font-weight-bold text-primary">@Model.GetCurAvgScreenTimeString()</h4>
            </div>

            <div class="col-4 text-center border-right">
                <div class="text-muted">
                    Avg Screen Time: @Model.PreStartDate.ToString("dd/MMM") - @Model.PreDate.ToString("dd/MMM/yy")
                </div>
                <h4 class="font-weight-bold text-primary">@Model.GetPreAvgScreenTimeString()</h4>
            </div>

            <div class="col-2">
                <div class="d-flex justify-content-center">
                    @if (Model.MoMAvgScreenTime > 0)
                    {
                        // Sad Icon
                        <div class="mr-4 mt-1">
                            <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="48" height="48" viewBox="0 0 473.931 473.931" xml:space="preserve"> <circle style="fill:#FFC10E;" cx="236.966" cy="236.966" r="236.966" /> <g> 	<circle style="fill:#333333;" cx="164.937" cy="155.231" r="37.216" /> 	<circle style="fill:#333333;" cx="305.664" cy="155.231" r="37.216" /> 	<path style="fill:#333333;" d="M105.278,326.581c86.386,0,172.776,0,259.162,0c12.067,0,12.067-18.709,0-18.709 		c-86.386,0-172.776,0-259.162,0C93.211,307.872,93.211,326.581,105.278,326.581L105.278,326.581z" /> </g> </svg>
                        </div>
                        <div class="text-center">
                            <span class="text-muted">Change</span>
                            <h4 class="font-weight-bold text-danger">@Model.GetMoMAvgScreenTimeString()</h4>
                        </div>
                    }
                    else
                    {
                        // Smiley Icon
                        <div class="mr-4 mt-1">
                            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="48" height="48" viewBox="0 0 473.931 473.931" xml:space="preserve"> <circle style="fill:#FFC10E;" cx="236.966" cy="236.966" r="236.966" /> <path style="fill:#333333;" d="M81.391,237.127c0,85.911,69.649,155.56,155.56,155.56c85.915,0,155.567-69.649,155.567-155.56 	H81.391z" /> <path style="fill:#CA2027;" d="M150.452,298.705c0,47.771,38.731,86.498,86.498,86.498c47.775,0,86.502-38.731,86.502-86.498 	H150.452z" /> <g> 	<circle style="fill:#333333;" cx="164.937" cy="155.231" r="37.216" /> 	<circle style="fill:#333333;" cx="305.664" cy="155.231" r="37.216" /> </g> </svg>
                        </div>
                        <div class="text-center">
                            <span class="text-muted">Change</span>
                            <h4 class="font-weight-bold text-success">@Model.GetMoMAvgScreenTimeString()</h4>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card shadow-sm mb-3">
    <div class="card-body">
        <div class="card-title">
            <h5>Family Time Summary</h5>
            <hr />
        </div>

        <div class="row">
            <div class="col-4 border-right text-center">
                <div class="text-muted">
                    Avg Family Time: @Model.CurStartDate.ToString("dd/MMM") - @Model.CurDate.ToString("dd/MMM/yy")
                </div>
                <h4 class="font-weight-bold text-primary">@Model.GetCurAvgFamilyTimeString()</h4>
            </div>
            <div class="col-4 border-right text-center">
                <div class="text-muted">Avg Family Time: @Model.PreStartDate.ToString("dd/MMM") - @Model.PreDate.ToString("dd/MMM/yy")</div>
                <h4 class="font-weight-bold text-primary">@Model.GetPreAvgFamilyTimeString()</h4>
            </div>
            <div class="col-4">
                <div class="d-flex justify-content-center">
                    @if (Model.MoMAvgFamilyTime < 0)
                    {
                        // Sad Icon
                        <div class="mr-4 mt-1">
                            <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="48" height="48" viewBox="0 0 473.931 473.931" xml:space="preserve"> <circle style="fill:#FFC10E;" cx="236.966" cy="236.966" r="236.966" /> <g> 	<circle style="fill:#333333;" cx="164.937" cy="155.231" r="37.216" /> 	<circle style="fill:#333333;" cx="305.664" cy="155.231" r="37.216" /> 	<path style="fill:#333333;" d="M105.278,326.581c86.386,0,172.776,0,259.162,0c12.067,0,12.067-18.709,0-18.709 		c-86.386,0-172.776,0-259.162,0C93.211,307.872,93.211,326.581,105.278,326.581L105.278,326.581z" /> </g> </svg>
                        </div>
                        <div class="text-center">
                            <span class="text-muted">Change</span>
                            <h4 class="font-weight-bold text-danger">@Model.GetMoMAvgFamilyTimeString()</h4>
                        </div>
                    }
                    else
                    {
                        // Smiley Icon
                        <div class="mr-4 mt-1">
                            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="48" height="48" viewBox="0 0 473.931 473.931" xml:space="preserve"> <circle style="fill:#FFC10E;" cx="236.966" cy="236.966" r="236.966" /> <path style="fill:#333333;" d="M81.391,237.127c0,85.911,69.649,155.56,155.56,155.56c85.915,0,155.567-69.649,155.567-155.56 	H81.391z" /> <path style="fill:#CA2027;" d="M150.452,298.705c0,47.771,38.731,86.498,86.498,86.498c47.775,0,86.502-38.731,86.502-86.498 	H150.452z" /> <g> 	<circle style="fill:#333333;" cx="164.937" cy="155.231" r="37.216" /> 	<circle style="fill:#333333;" cx="305.664" cy="155.231" r="37.216" /> </g> </svg>
                        </div>
                        <div class="text-center">
                            <span class="text-muted">Change</span>
                            <h4 class="font-weight-bold text-success">@Model.GetMoMAvgFamilyTimeString()</h4>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@if (ViewBag.PageStatus == "WITHTRACKING")
{
    <div class="row">
        <div class="col-12">
            <h3 class="text-primary">Screen Time Tracking</h3>
            <hr />
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-7">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="card-title">
                        <h5>Screen Time Progress vs Goal</h5>
                        <hr />
                    </div>
                    <div id="ScreenTimeProgressChart" style="min-height: 350px;"></div>
                </div>
            </div>
        </div>
        <div class="col-md-5">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="card-title">
                        <h5>Screen Time Distribution</h5>
                        <hr />
                    </div>
                    <div id="ScreenTimeHistogram" style="min-height: 350px;"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <h3 class="text-primary">Family Time Tracking</h3>
            <hr />
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-7">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="card-title">
                        <h5>Family Time Progress</h5>
                        <hr />
                    </div>
                    <div id="FamilyTimeProgressChart" style="min-height: 350px;"></div>
                </div>
            </div>
        </div>
        <div class="col-md-5">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="card-title">
                        <h5>Family Time Distribution</h5>
                        <hr />
                    </div>
                    <div id="FamilyTimeHistogram" style="min-height: 350px;"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <h3 class="text-primary">Family Time and Screen Time</h3>
            <hr />
        </div>
    </div>

    <div class="row">
        <div class="col-md-7">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="card-title">
                        <h5>Avg Family Time and Screen Time by Month</h5>
                        <hr />
                    </div>
                    <div id="MonthNameSummaryChart" style="min-height: 350px;"></div>
                </div>
            </div>
        </div>
        <div class="col-md-5">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="card-title">
                        <h5>Weekday vs Weekend</h5>
                        <hr />
                    </div>
                    <div id="WeekNameSummaryChart" style="min-height: 350px;"></div>
                </div>
            </div>
        </div>
    </div>


    @section Scripts {
        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
        <script type="text/javascript">
            // Load the Visualization API and the corechart package.
            google.charts.load('current', { 'packages': ['corechart'] });
            // Set a callback to run when the Google Visualization API is loaded.
            google.charts.setOnLoadCallback(drawAllCharts);

            window.onresize = function () {
                drawAllCharts();
            }

            function getAllData() {
                var data;
                $.ajax({
                    url: "@Url.Action("GetTrackedData", "Children", routeValues: new { id=Model.ChildId })",
                    contentType: "application/json; charset=utf-8",
                    type: 'GET',
                    cache: false,
                    async: false,
                    success: function (result) {
                        data = result;
                    }
                });
                return data;
            }

            function drawFamilyTimeProgressChart(data) {
                var familyTimeView = new google.visualization.DataView(data);
                familyTimeView.setColumns([0, 1]);

                // Set chart options
                var options = {
                    fontName: 'Verdana',
                    curveType: 'function',
                    colors: ["#457aff"],
                    chartArea: { left: 50, top: 20, width: '90%', height: '80%' },
                    legend: { position: 'in', alignment: 'end' },
                    vAxis: {
                        title: "Daily Avg (Hour)",
                        titleTextStyle: { italic: false },
                        minValue: 0,
                        gridlines: { color: 'f6f6f6' },
                        minorGridlines: { color: 'white' }
                    },
                    hAxis: {
                        title: "",
                        gridlines: {
                            color: 'white', units: {
                                months: { format: "MMMyy" }
                            }
                        }
                    },
                    trendlines: {
                        0: {
                            type: 'linear',
                            color: "#d7475f",
                            lineWidth: 3,
                            labelInLegend: 'Trend Line',
                            visibleInLegend: true
                        }
                    }
                };

                var familyTimeProgressChart = new google.visualization.LineChart(document.getElementById('FamilyTimeProgressChart'));
                familyTimeProgressChart.draw(familyTimeView, options);
            }

            function drawFamilyTimeHistogram(data) {
                var familyTimeView = new google.visualization.DataView(data);
                familyTimeView.setColumns([1]);

                // Set chart options
                var options = {
                    fontName: 'Verdana',
                    colors: ["#457aff"],
                    chartArea: { left: 50, top: 20, width: '90%', height: '80%' },
                    legend: { position: 'none' },
                    histogram: { bucketSize: 0.4, lastBucketPercentile: 5  },
                    vAxis: {
                        title: "Frequency",
                        titleTextStyle: { italic: false },
                        minValue: 0,
                        gridlines: { color: 'f6f6f6' },
                        minorGridlines: { color: 'white' }
                    },
                    hAxis: {
                        title: "Duration (hour)",
                        titleTextStyle: { italic: false },
                        gridlines: { color: 'white' }
                    }
                };

                var chart = new google.visualization.Histogram(document.getElementById('FamilyTimeHistogram'));
                chart.draw(familyTimeView, options);
            }

            function drawScreenTimeProgressChart(data) {
                var screenTimeView = new google.visualization.DataView(data);
                screenTimeView.setColumns([0, 2, 3]);

                // Set chart options
                var options = {
                    fontName: 'Verdana',
                    curveType: 'function',
                    colors: ["#457aff", "#ffa600"],
                    chartArea: { left: 50, top: 20, width: '90%', height: '80%' },
                    legend: { position: 'in', alignment: 'end' },
                    seriesType: 'bars',
                    series: {1: {type: 'line', lineWidth: 3}},
                    vAxis: {
                        title: "Daily Avg (Hour)",
                        titleTextStyle: { italic: false },
                        minValue: 0,
                        gridlines: { color: 'f6f6f6' },
                        minorGridlines: { color: 'white' }
                    },
                    hAxis: {
                        title: "",
                        gridlines: {
                            color: 'white', units: {
                                months: { format: "MMMyy" }
                            }
                        }
                    },
                    trendlines: {
                        0: {
                            type: 'linear',
                            color: "#d7475f",
                            lineWidth: 3,
                            labelInLegend: 'Trend Line',
                            visibleInLegend: true
                        }
                    }
                };

                var screenTimeProgressChart = new google.visualization.ComboChart(document.getElementById('ScreenTimeProgressChart'));
                screenTimeProgressChart.draw(screenTimeView, options);
            }

            function drawScreenTimeHistogram(data) {
                var screenTimeView = new google.visualization.DataView(data);
                screenTimeView.setColumns([2]);

                // Set chart options
                var options = {
                    fontName: 'Verdana',
                    curveType: 'function',
                    colors: ["#d7475f"],
                    chartArea: { left: 50, top: 20, width: '90%', height: '80%' },
                    legend: { position: 'none' },
                    histogram: { bucketSize: 0.4, lastBucketPercentile: 5 },
                    vAxis: {
                        title: "Frequency",
                        titleTextStyle: { italic: false },
                        minValue: 0,
                        gridlines: { color: 'f6f6f6' },
                        minorGridlines: { color: 'white' }
                    },
                    hAxis: {
                        title: "Duration (hour)",
                        titleTextStyle: { italic: false },
                        gridlines: { color: 'white' }
                    }
                };

                var chart = new google.visualization.Histogram(document.getElementById('ScreenTimeHistogram'));
                chart.draw(screenTimeView, options);
            }

            function drawMonthNameSummary(data) {
                var monthNameSummary = new google.visualization.DataTable();
                monthNameSummary.addColumn('string', "Month Name");
                monthNameSummary.addColumn('number', "Family Time");
                monthNameSummary.addColumn('number', "Screen Time");

                data.forEach(function (d) {
                    monthNameSummary.addRow([
                        d.MonthName,
                        d.AvgFamilyTime,
                        d.AvgScreenTime
                    ]);
                });

                // Set chart options
                var options = {
                    fontName: 'Verdana',
                    curveType: 'function',
                    colors: ["#457aff", "#d7475f"],
                    chartArea: { left: 50, top: 20, width: '90%', height: '85%' },
                    legend: { position: 'in', alignment: 'end' },
                    vAxis: {
                        title: "Daily Avg (Hour)",
                        titleTextStyle: { italic: false },
                        minValue: 0,
                        gridlines: { color: 'f6f6f6' },
                        minorGridlines: { color: 'white' }
                    },
                    hAxis: {
                        title: "",
                        gridlines: { color: 'white' }
                    }
                };

                var monthNameChart = new google.visualization.ColumnChart(document.getElementById('MonthNameSummaryChart'));
                monthNameChart.draw(monthNameSummary, options);
            }

            function drawWeekNameSummary(data) {
                var weekNameSummary = new google.visualization.DataTable();
                weekNameSummary.addColumn('string', "Week Name");
                weekNameSummary.addColumn('number', "Family Time");
                weekNameSummary.addColumn('number', "Screen Time");

                data.forEach(function (d) {
                    weekNameSummary.addRow([
                        d.WeekName,
                        d.AvgFamilyTime,
                        d.AvgScreenTime
                    ]);
                });

                // Set chart options
                var options = {
                    fontName: 'Verdana',
                    curveType: 'function',
                    colors: ["#457aff", "#d7475f"],
                    chartArea: { left: 50, top: 20, width: '90%', height: '85%' },
                    legend: { position: 'in', alignment: 'end' },
                    vAxis: {
                        title: "Daily Avg (Hour)",
                        titleTextStyle: { italic: false },
                        minValue: 0,
                        gridlines: { color: 'f6f6f6' },
                        minorGridlines: { color: 'white' }
                    },
                    hAxis: {
                        title: "",
                        gridlines: { color: 'white' }
                    }
                };
                var weekNameChart = new google.visualization.ColumnChart(document.getElementById('WeekNameSummaryChart'));
                weekNameChart.draw(weekNameSummary, options);
            }

            function drawAllCharts() {
                var allData = getAllData();

                var data = new google.visualization.DataTable();
                data.addColumn('date', 'Tracked Date');
                data.addColumn('number', 'Family Time');
                data.addColumn('number', 'Screen Time');
                data.addColumn('number', 'Screen Time Goal');

                allData.TrackedData.forEach(function (d) {
                    data.addRow([
                        new Date(d.TrackedDate),
                        d.FamilyTime,
                        d.ScreenTime,
                        d.ScreenTimeGoal
                    ]);
                });

                drawFamilyTimeProgressChart(data);
                drawFamilyTimeHistogram(data);

                drawScreenTimeProgressChart(data);
                drawScreenTimeHistogram(data);

                drawWeekNameSummary(allData.WeekSummary);
                drawMonthNameSummary(allData.MonthSummary);
            }
        </script>
    }
}